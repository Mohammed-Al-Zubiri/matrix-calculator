*,
::before,
::after {
  box-sizing: border-box;
  margin: 0;
}

:root {
  --clr-primary: #020C25;
}

body {
  font-family: Tahoma, sans-serif;
  background: #000;
  min-height: 100vh;
  min-height: 100dvh;
}

/* Button reset */
button,
[type='submit'] {
  display: inline-block;
  border: none;
  background: none;
  cursor: pointer;
  color: inherit;
}

/* CSS input reset */
input,
textarea {
  border: none;
  outline: none;
  background: none;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

/* Reset input number */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  appearance: none;
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  appearance: textfield;
  -moz-appearance: textfield;
}

/* Utility Classes Start */

/* .btn utility */
.btn {
  padding: 0.5em 1em;
  background: var(--clr-primary);
  color: #FFF;
  border-radius: 6px;
}
.btn.secondary {
  background: #FFF;
  color: var(--clr-primary);
  border: 2px solid var(--clr-primary);
}
.btn.secondary:hover {
  background: #EEE;
}

/* Utility Classes End */


.app-name {
  text-align: center;
  margin-bottom: 3rem;
  padding-block: 0.7rem 1rem;
  background: var(--clr-primary);
  color: white;
  transform: scaleX(1.05);
}

.container {
  padding-inline: 0.5rem;
  background: #FFF;
  position: relative;
}

@media (min-width: 400px) {
  .container {
    width: 350px;
    min-width: 350px;
    margin: 2rem auto;
    min-height: 600px;
    border-radius: 20px;
    overflow: hidden;
    resize: horizontal;
  }
}

/* Matrix view styling */
.matrix .header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.controls {
  display: flex;
  align-items: center;
}

.controls .cols::before {
  content: "cols";
  position: absolute;
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
}
.controls .rows::before {
  content: "rows";
  position: absolute;
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
}

.controls :is(.cols, .rows) {
  display: flex;
  align-items: center;
  background-color: rgba(95, 158, 160, 0.3);
  margin-left: 1rem;
  border-radius: 5px;
  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.3);
  position: relative;
}

.controls :is(.cols, .rows) .minus {
  font-weight: bold;
  color: red;
  margin-right: 0.6rem;
}

.controls :is(.cols, .rows) .plus {
  font-weight: 500;
  color: green;
  margin-left: 0.6rem;
}

.controls :is(.cols, .rows) :is(.minus, .plus) {
  font-size: large;
  width: 2rem;
  padding: 0.3rem 0.5rem;
  text-align: center;
  cursor: pointer;
  border-radius: 5px;
}

.controls :is(.cols, .rows) :is(.minus, .plus):hover {
  background: rgba(0, 0, 0, 0.1);
}

.operation, .shuffle-solve {
  display: flex;
  gap: 1rem;
  margin: 2rem 0.5rem;
}

:is(.op-btn, .shuffle-solve button) {
  flex: 1;
  font-size: large;
  padding: 0.5rem;
  background: silver;
  border-radius: 7px;
  color: white;
  font-weight: bold;
  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.3);
}

.operation .op-btn:is(.selected, :hover), .shuffle-solve button {
  background: var(--clr-primary);
}

#swap {
  transition: transform 500ms;
}
#swap.clicked {
  transform: rotateX(180deg);
}

.matrix .elements {
  padding-top: 1.5rem;
  width: fit-content;
  max-width: 80%;
  margin-inline: auto;
  overflow-x: scroll;
  /* box-sizing: content-box; */
}

.matrix .elements .vector {
  display: flex;
  gap: 0.3rem;
  margin-bottom: 0.33rem;
}

.matrix .elements input {
  flex: 0 0 ;
  width: 34px;
  font-size: 1.2rem;
  border: 1px solid gray;
  border-radius: 5px;
  background: #f3f3f3;
  text-overflow: ellipsis;
}

.matrix .elements input:focus {
  border-color: #000;
}

#solution .wrapper {
  overflow-x: scroll;
}

.sol-matrix {
  display: grid;
  gap: 0.8rem;
  font-size: 1.1rem;
  width: fit-content;
  margin: 1rem auto;
  padding: 0.5rem 1rem;
  border-left: 3px solid;
  border-right: 3px solid;
  border-radius: 1rem;
}

/* Error Dialog */
#error-modal {
  border: 0;
  width: clamp(250px, 80%, 320px);
  padding: 1rem;
  border-radius: 0.5rem;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
  margin: auto;
}
#error-modal::backdrop {
  background-color: rgb(0 0 0 / 0.3);
}

#error-modal :is(h2, p) {
  margin-bottom: 1rem;
}

#error-modal .buttons {
  display: flex;
  justify-content: flex-end;
  gap: 0.7rem;
}

